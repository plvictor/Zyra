import { readFileSync, writeFileSync } from 'fs';
import { join } from 'path';
import { Lexer } from './lexer';
import { Parser } from './parser';
import { Generator } from './generator';

class ZyraCompiler {
    compile(sourceFile: string, outputFile: string) {
        try {
            // Ler arquivo fonte
            console.log(`üìñ Lendo arquivo ${sourceFile}...`);
            const source = readFileSync(sourceFile, 'utf-8');

            // An√°lise l√©xica
            console.log('üîç Realizando an√°lise l√©xica...');
            const lexer = new Lexer(source);
            const tokens = lexer.scanTokens();

            // An√°lise sint√°tica
            console.log('üî® Realizando an√°lise sint√°tica...');
            const parser = new Parser(tokens);
            const ast = parser.parse();

            // Gera√ß√£o de c√≥digo
            console.log('‚ö° Gerando c√≥digo JavaScript...');
            const generator = new Generator();
            const output = generator.generate(ast);

            // Escrever arquivo de sa√≠da
            console.log(`üíæ Salvando em ${outputFile}...`);
            writeFileSync(outputFile, output);

            console.log('‚úÖ Compila√ß√£o conclu√≠da com sucesso!');
        } catch (error) {
            console.error('‚ùå Erro durante a compila√ß√£o:', error);
            process.exit(1);
        }
    }
}

// Executar compila√ß√£o
const compiler = new ZyraCompiler();
const sourceFile = process.argv[2] || 'src/main.zy';
const outputFile = process.argv[3] || 'dist/main.js';

compiler.compile(sourceFile, outputFile); 
component ChatRoom {
    props {
        messages: [],
        currentUser: null
    }

    function onMount() {
        this.scrollToBottom()
    }

    function onUpdate() {
        this.scrollToBottom()
    }

    function scrollToBottom() {
        let container = document.querySelector(".messages")
        container.scrollTop = container.scrollHeight
    }

    function formatTime(timestamp) {
        return new Date(timestamp).toLocaleTimeString()
    }

    style {
        .messages {
            flex: 1
            overflow-y: auto
            padding: 20px
        }

        .message {
            margin-bottom: 15px
            display: flex
            flex-direction: column
        }

        .message.own {
            align-items: flex-end
        }

        .message-content {
            max-width: 70%
            padding: 10px 15px
            border-radius: 15px
            background: #e3f2fd
        }

        .message.own .message-content {
            background: #42a5f5
            color: white
        }

        .message-header {
            font-size: 0.8em
            color: #666
            margin-bottom: 5px
        }

        .message.own .message-header {
            color: #333
        }

        .message-time {
            font-size: 0.7em
            color: #999
            margin-top: 5px
        }
    }

    render {
        <div class="messages">
            {messages.map(message => (
                <div class={"message " + (message.user.id === currentUser.id ? "own" : "")}>
                    <div class="message-content">
                        <div class="message-header">
                            {message.user.name}
                        </div>
                        {message.text}
                        <div class="message-time">
                            {formatTime(message.timestamp)}
                        </div>
                    </div>
                </div>
            ))}
        </div>
    }
} 